import tkinter as tk
from tkinter import ttk
from tkcalendar import Calendar  # Importowanie tkcalendar


# Create the main window
root = tk.Tk()
root.title("Aplikacja do Zarządzania Utrzymaniem Ruchu")

# Set window size
root.geometry("1200x800")

# Create a frame for the sidebar
sidebar = tk.Frame(root, width=200, bg='#dddddd')
sidebar.pack(fill='y', side='left', anchor='nw')

# Function to update the main area based on button clicked
def update_main_area(option):
    # Clear the previous options
    for widget in options_frame.winfo_children():
        widget.destroy()
    button_frame = tk.Frame(options_frame)
    button_frame.pack(fill='x')
 # Create a table for the "Magazyn" option
    if option == "Magazyn":
        columns = ("nazwa_czesci", "id_czesci", "pozycja_czesci", "ilosc", "parametr1", "parametr2")
        table = ttk.Treeview(options_frame, columns=columns, show='headings')
        for col in columns:
            table.heading(col, text=col.replace("_", " ").title())
            table.column(col, width=100, anchor='center')
        table.pack(expand=True, fill='both')
        # Przyciski i pole wprowadzania
        entry_frame = tk.Frame(options_frame)
        entry_frame.pack(fill='x', pady=10)

        entry_label = tk.Label(entry_frame, text="Wpisz dane:")
        entry_label.pack(side='left', padx=5)

        entry = tk.Entry(entry_frame)
        entry.pack(side='left', expand=True, fill='x', padx=5)

        add_button = tk.Button(entry_frame, text="Dodaj część", command=lambda: add_part(entry.get(), table))
        add_button.pack(side='left', padx=5)

        delete_button = tk.Button(entry_frame, text="Usuń część", command=lambda: delete_part(table))
        delete_button.pack(side='left', padx=5)

        edit_button = tk.Button(entry_frame, text="Edytuj część", command=lambda: edit_part(entry.get(), table))
        edit_button.pack(side='left', padx=5)

        table.pack(expand=True, fill='both')

        # Funkcje dla przycisków
        def add_part(data, table):
            # Logika dodawania części
            pass

        def delete_part(table):
            # Logika usuwania części
            pass

        def edit_part(data, table):
            # Logika edytowania części
            pass        

         # Dodawanie przykładowych danych do tabeli
        data = [
            ("Część A", "001", "Regał 1", "10", "Parametr A1", "Parametr A2"),
            ("Część B", "002", "Regał 2", "15", "Parametr B1", "Parametr B2"),
            # ... więcej danych
        ]
        for row in data:
            table.insert('', 'end', values=row)
        table.pack(expand=True, fill='both')

    elif option == "Maszyny":
        ttk.Button(button_frame, text="Dodaj maszynę", command=add_machine).pack(side='left', padx=10, pady=10)
        ttk.Button(button_frame, text="Usuń maszynę", command=remove_machine).pack(side='left', padx=10, pady=10)

    elif option == "Dziennik Napraw":
        ttk.Button(button_frame, text="Dodaj przegląd", command=add_review).pack(side='left', padx=10, pady=10)
        ttk.Button(button_frame, text="Edytuj przegląd", command=edit_review).pack(side='left', padx=10, pady=10)

    elif option == "Użytkownik":
        ttk.Button(button_frame, text="Dodaj użytkownika", command=add_user).pack(side='left', padx=10, pady=10)
        ttk.Button(button_frame, text="Usuń użytkownika", command=remove_user).pack(side='left', padx=10, pady=10)

    elif option == "Zadania":
        ttk.Button(button_frame, text="Dodaj zadanie", command=add_task).pack(side='left', padx=10, pady=10)
        ttk.Button(button_frame, text="Usuń zadanie", command=remove_task).pack(side='left', padx=10, pady=10)

   

    # Create buttons and calendar for sub-options
    for opt in options_frame:
         if opt == "Kalendarz":
                cal = Calendar(options_frame, selectmode='day', year=2023, month=11, day=27, width=200, height=200)
                cal.pack(side='left', padx=50, pady=50)  # Tutaj dostosuj marginesy i położenie
         else:
                ttk.Button(options_frame, text=opt).pack(side='left', padx=10, pady=10)
# Funkcje dla przycisków w sekcji Maszyny
def add_machine():
    # Logika dodawania maszyny
    pass

def remove_machine():
    # Logika usuwania maszyny
    pass

# Funkcje dla przycisków w sekcji Dzienik naparw
def add_review():
    # Logika dodawania przeglądu
    pass

def edit_review():
    # Logika edytowania przeglądu
    pass

# Funkcje dla przycisków w sekcji Użytkownik
def add_user():
    # Logika dodawania użytkownika
    pass

def remove_user():
    # Logika usuwania użytkownika
    pass

# Funkcje dla przycisków w sekcji Zadania
def add_task():
    # Logika dodawania zadania
    pass

def remove_task():
    # Logika usuwania zadania
    pass                
   
# Create buttons in the sidebar
buttons = ["Magazyn", "Maszyny", "Dziennik Napraw", "Zadania"]
for button in buttons:
    ttk.Button(sidebar, text=button, command=lambda b=button: update_main_area(b)).pack(fill='x', padx=25, pady=20)

# Create a frame for the second-level options
options_frame = tk.Frame(root, bg='#ffffff')
options_frame.pack(fill='x', side='top')

# Create a main area for displaying information
main_area = tk.Frame(root, bg='#ffffff')
main_area.pack(fill='both', expand=True)

root.mainloop()
